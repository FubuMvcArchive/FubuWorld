<html>
    <head>
        <Stylesheet href="home.css" />
        <commonHeader/>

    </head>
    <body>
	<a id="top"></a>
        <div class="jumbotron subhead masthead">
            <div class="container">
                <h1>Frameworks For Us, By Us.</h1>
                <p>Frictionless, compositional, and compile-safe frameworks that bring the love back to .NET.</p>
            </div>
        </div>

		
        <div class="marketing">
            <div class="row-fluid marketing-links">
                <p class="text-center"><a href="#community">The Fubu Community</a><a href="#contributing">Contributing</a><a href="#projects">All Projects</a><a href="#roadmap">Roadmap</a><a href="#releases">Releases</a></p>
            </div>
			
            <BlurbRow>
                <Blurb title="Web Applications">
                    Build compositional web applications with <ProjectLink name="FubuMVC"/>.  Easily generate html in .Net with the <ProjectLink name="HtmlTags"/> library.
                </Blurb>  
				  
                <Blurb title="Event Based Architecture">
                    Use <ProjectLink name="FubuTransportation"/> as a low friction service bus for your messaging infrastucture needs.
                </Blurb>
				  
                <Blurb title="Foundational Tools">
                    Cleanly compose your application's services and dependencies with <ProjectLink name="StructureMap" />, the original IoC/DI tool for .Net.  Use the <ProjectLink name="FubuCore" /> library for common tasks inexplicably left out of .Net's Base Class Library. 
                </Blurb>
				  
                <Blurb title="Automated Testing">
                    Write and manage executable specifications in user facing language with the <ProjectLink name="Storyteller" /> tool.  Use <ProjectLink name="Serenity" /> as the glue for hosting and exercising <ProjectLink name="FubuMVC" /> and <ProjectLink name="FubuTransportation" /> applications with <ProjectLink name="Storyteller" />.
                </Blurb>
            </BlurbRow>
			
            <BlurbRow>
                <Blurb title="Build Automation">
					The combination of <a href="http://rake.rubyforge.org">Rake</a> and our own <ProjectLink name="FubuRake" /> gem makes generic build automation and integration with many of the tools on this site a breeze.
                </Blurb>  
				  
                <Blurb title="Dependency Management">
					Use <ProjectLink name="ripple"/> for better dependency management with <a href="http://www.nuget.org">Nuget</a> -- especially for continuation integration scenarios.
                </Blurb>
				  
                <Blurb title="Console Applications">
				    Build command line interfaces with the <ExternalTopicLink title="command line parsing tooling" name="fubucore/cli" /> in <ProjectLink name="FubuCore" />.
                </Blurb>
				  
                <Blurb title="Windows Services">
				    Quickly host <ProjectLink name="FubuMVC" /> or <ProjectLink name="FubuTransportation" /> applications in windows services using <ExternalTopicLink title="BottleServiceRunner" name="bottles/windows-services" /> from the <ProjectLink name="Bottles" /> project and the most excellent <a href="http://topshelf-project.com">TopShelf</a> library.
                </Blurb>
            </BlurbRow>
			  

            <BlurbRow>
                <Blurb title="Documentation Generation">
                    Living technical documentation (like this site!) made easy with <ProjectLink name="FubuDocs"/>.
                </Blurb>  
				  
                <Blurb title="Extensibility">
                    Build extensible packaging capabilities into your own framework or application with <ProjectLink name="Bottles"/>.
                </Blurb>
				  
                <Blurb title="Validation">
                    Have validation your way with <ProjectLink name="FubuValidation"/>.  TODO(link to FubuMVC.Validation topic page), integration w/ client side JS too
                </Blurb>
				  
                <Blurb title="Localization">
                    Localization with flexible storage and testing friendliness with <ProjectLink name="FubuLocalization"/>.  Integrate localization into <ProjectLink name="FubuMVC" /> applications with <ExternalTopicLink title="FubuMVC.Localization" name="fubumvc.localization"/>. 
                </Blurb>
            </BlurbRow>
			  

        </div>
	
    <div class="container">
		<a id="projects"></a>
		<h1>All Projects</h1>
		<AllProjectsTable />

		<a href="#top">Back to top...</a>
	</div>

<div class="container">

<markdown>

<br></br><br></br><br></br><br></br><br></br>

<a id="contributing" />
Contributing
============

git practices, how to get PR's, maybe some links to low hanging fruit issues?

TODO(need to revise the following)

[Contribution Guide](https://github.com/DarthFubuMVC/fubumvc/wiki/Contribution-Guide)

[Back to top...](#top)


<br></br><br></br><br></br><br></br><br></br>
<a id="community"></a>
Community
=========

- links to Jeremy, Josh, and Corey's twitter stuff and blogs
- recent talks?
- user groups
- what else?

[Back to top...](#top)





<br></br><br></br><br></br><br></br><br></br>
<a id="releases"></a>
Recent Releases
===============

[FubuRake 1.0](http://fubuworld.com/fuburake/) 

* Default Conventions based on fubu project conventions
* NUnit integration
* Bottles, Ripple, and FubuDocs integration
* Fubu development server integration
* Storyteller2 integration



[FubuMVC.Core 1.2](http://www.nuget.org/packages/FubuMVC.Core/)

* Small bug fixes


[FubuMVC.StructureMap 1.2](http://www.nuget.org/packages/FubuMVC.StructureMap/)

* Integrates the _Settings_ pattern out of the box


[Bottles 2.0](http://fubuworld.com/bottles)

* Environment test model
* [Multiple AppDomain support](http://fubuworld.com/bottles/multiple-appdomains/)
* Messaging test support in distributed development
* _Remote Links_


[BottleServiceRunner](http://nuget.org/packages/BottleServiceRunner)

* TopShelf integration with BottleServiceRunner


[fubu beta](http://fubuworld.com/fubu)

* _fubu run_ - the development web server using Katana
* _fubu new_ - project scaffolding for brand new code trees
* _fubu add_ - generate new projects in existing code trees
* _fubu enhance_ - add additional infrasturcture to existing projects


[FubuCsProjFile 1.1](http://fubuworld.com/fubucsprojfile)

* .csproj file querying and manipulation
* Templating engine

[Back to top...](#top)






<br></br><br></br><br></br><br></br><br></br>
<a id="roadmap"></a>
Release Roadmap
===============

_Let's be honest, any date on this page that's in the future is probably a combination of wishful thinking, good intentions, and high fantasy._

<h2>In Flight</h2>

* [Ripple 3.0](http://fubuworld.com/ripple)
* [StructureMap 3.0](http://fubuworld.com/structuremap)
* [FubuDocs 1.0](http://fubuworld.com/fubudocs)
* [fubu 1.0](https://github.com/DarthFubuMVC/fubu/issues?state=open)

<hr/>

<h2 style="margin-bottom: 15px">Forthcoming</h2>


<h4>FubuMVC and FubuMVC.Katana 1.3</h4>

* [See the issue list](https://github.com/DarthFubuMVC/fubumvc/issues?milestone=6&page=1&state=open)
* Improved OWIN support
* Startup time improvements


<h4>FubuCore 2.0</h4>

* Streamline model binding
* Model Binding to support FieldInfo
* ReflectionHelper to support FieldInfo

<h4>FubuTestingSupport 2.0</h4>

* Support [Fixie](https://github.com/plioi/fixie) instead of NUnit
* Decouple the Should****() methods from NUnit
* PCL support
* FubuTestingSupport.AutoMocking – new package for InteractionContext


<h4>FubuMVC 2.0</h4>

* [See the issue list](https://github.com/DarthFubuMVC/fubumvc/issues?milestone=5&page=1&state=open)
* Streamline the authorization rules
* Streamline the Conneg model
* Some overdue API Cleanup
* HTML template generation for SPA applications

<h4>FubuMVC.Core.UI vNext</h4>
* Consolidate all the commonly used FubuMVC UI-centric Bottle projects
* Support auto-forms
* Expose a very slimmed down asset pipeline


<h4>FubuMVC.Core.Asset Replacement</h4>

* Eliminate all runtime asset transformations
* Serve all assets as static files or CDN
* Develop a [Mimosa.js](http://mimosa.io) recipe for working with FubuMVC/Bottles projects


<h4>FubuMVC.Media 1.0 (ReST)</h4>

* Flesh out the Hypermedia support
* Dependent upon the Conneg improvements in FubuMVC 2.0
* Support [Bender](https://github.com/mikeobrien/Bender) for object serialization and projections
* Add more conventions for advanced HTTP usage (headers, status code, etc.)


[Back to top...](#top)




</markdown>

</div>


        <commonFooter/>
    </body>
</html>