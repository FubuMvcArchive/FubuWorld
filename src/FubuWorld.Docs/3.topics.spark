<!--Title: Topics-->



<markdown>

FubuDocs was heavily influenced by the navigation and organization structure from [readthedocs](https://readthedocs.org).  As such, we had a couple goals in mind:

1. Make it easy and low ceremony to author content
1. Provide a sensible and maintainable way to establish navigation and organizational structure
1. Run the resulting website hosted in FubuMVC;-)

With those goals in mind, FubuDocs uses the [Spark View Engine](http://sparkviewengine.com) support within <ProjectLink name="FubuMVC"/> to generate content to utilize its out of the box support for authoring html content with [Markdown](http://daringfireball.net/projects/markdown/syntax) and Spark's very powerful [custom html bindings](http://sparkviewengine.com/documentation/bindings).  

To author content with FubuDocs you simply write content into a spark text file either using Markdown or straight html.  In FubuDocs nomemclature, each spark file is a "topic."

FubuDocs itself handles the basic page layout of each topic and renders standard navigation headers, footers, and a left column table of contents for each page based on the file structure of the topic files within the documentation project and the <code>&lt;section&gt;</code> structure of the rendered topic html. 

<Info>
FubuDocs uses <a href="http://twitter.github.io/bootstrap/">Twitter Bootstrap</a> for styling and layout -- but I betcha knew that from a single glance at this page.
</Info>

<Section title="A Topic File" id="file">

A topic file is just a text file with the <code>*.spark</code> file extension.  The structure of a topic file is going to follow the basic pattern shown below:

<pre>
&lt;!--Title: Some title--&gt;
&lt;markdown&gt;

Content here....

&lt;/markdown&gt;
</pre>

The title of the topic is embedded as an HTML comment in the pattern <code>&lt;!--Title: [the title]--&gt;</code> anywhere in the file. Using this wellknown comment structure rather than an html element allows FubuDocs to reuse the title for a topic in navigation structures, the actual <code>&lt;title&gt;</code> element on the page, and in the topic "chrome" that FubuDocs wraps around the topic content. 

The <code>&lt;markdown&gt;</code> element is not mandatory, but you will probably want to use markdown over html.

</Section>

<Section title="Sections within a Topic" id="sections">
To break up a longer topic, you can use the <code>&lt;Section&gt;</code> custom element to provide some structure within a topic and FubuDocs will build navigation for you in the left column.  

<Snippet name="using-section" />
</Section>

<!-- SAMPLE: using-section -->
<Section title="Topic Url's" id="url">

The url of a topic file is derived from the name of the file, the name of the documentation project, and the folder structure within the documentation project.

Here are some examples from FubuDocs's own documentation:

<table class="table">
  <thead>
	<tr>
		<th>Relative File Path</th>
		<th>Url</th>
	</tr>
  </thead>
  <tr>
	<td>3.topics.spark</td>
	<td>/fubudocs/topics</td>
  </tr>
  <tr>
	<td>6.commands/1.snippets.spark</td>
	<td>/fubudocs/commands/snippets</td>
  </tr>
    <tr>
	<td>6.commands/index.spark</td>
	<td>/fubudocs/commands</td>
  </tr>
    <tr>
	<td>splash.spark</td>
	<td>/fubudocs</td>
  </tr>  
  <tr>
	<td>index.spark</td>
	<td>/fubudocs/index</td>
  </tr>
</table>

A couple things to note:
* _index.spark_ has a special meaning as the main topic underneath a folder.  
* The number prefix you use to force the ordering of both folders and topics within a folder is ignored for the url determination
* If there is a splash page, the file <code>index.spark</code> will be _[project name]/index_.
* The sub folder names are part of the topic url

You can also override the file specific, last part of the url for a topic by embedding <code>&lt;!-- Url: [the url]--&gt;</code> anywhere in the topic spark file.

</Section>
<!-- ENDSAMPLE -->

<Section title="Ordering Topics" id="ordering">
Topic files are ordered within a folder by these rules:

1. Any file named _index.spark_ is first
1. If files are prefixed with a number like _3.topics.spark_ and _2.splashpages.spark_, the numbers are used to order
1. Without any numeric prefixes the files are ordered alphabetically by the file name
1. Child folders and files are ordered together
</Section>

<Section title="Authoring Toolbar" id="authoring">
When running in _development_ mode, you'll see an _authoring toolbar_ in the browser for the current topic and documentation project. The file name is a link to open the current topic in a text editor.  The other links lead to commonly used FubuDocs tools and reports.
</Section>

<Section title="Sample Topic" id="sample">
The markup for this page is shown below:
<EmbedFile name="3.topics.spark" />
</Section>

</markdown>